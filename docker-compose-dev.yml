version: "3.8"

x-common-env:
  &common-env
  FLASK_APP: app/__init__.py
  FLASK_ENV: development
  JWT_SECRET_KEY: dev_jwt_secret_123
  MONGODB_URI: mongodb://mongo:27017/todo_db
  POSTGRES_URI: postgresql://todo_user:todo_pass@postgres:5432/todo_auth_db
  API_PORT: 5000

services:
  # todo-api service configuration
  todo-api:
    build: .
    container_name: todo-api
    # Use common environment variables
    environment:
      <<: *common-env
    # volumes for live code updates
    volumes:
      - ./:/app
      - /app/.venv
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    command: >
      sh -c "
        pipenv install --dev &&
        flask run --host=0.0.0.0 --port=$$API_PORT
      "

  postgres:
    image: postgres:16-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_pass
      POSTGRES_DB: todo_auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_scripts/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d todo_auth_db"]
      interval: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: todo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_pass
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  mongo:
    image: mongo:7-jammy
    container_name: todo-mongo
    volumes:
      - mongo_data:/data/db
      - ./init_scripts/mongo_init.js:/docker-entrypoint-initdb.d/init.js
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: todo-mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: mongo_dev
      ME_CONFIG_BASICAUTH_PASSWORD: mongo_pass
    ports:
      - "8081:8081"
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  postgres_data:
  mongo_data: