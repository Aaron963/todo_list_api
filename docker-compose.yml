services:
  # todolist-api service configuration
  tdl-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: tdl-api:v1
    container_name: tdl-api-${FLASK_ENV}
    # Use common environment variables
    environment:
      # Noted that: loaded from .env files
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - API_PORT=${API_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_AUTH_DB=${MONGO_AUTH_DB}
    # volumes for live code updates
    volumes:
      - ./:/app
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    command: >
      sh -c "
        flask run --host=0.0.0.0 --port=$$API_PORT --reload
      "
    networks:
      - tdl-network

  postgres:
    image: postgres:16-alpine
    container_name: tdl-postgres-${FLASK_ENV}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_${FLASK_ENV}:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
    networks:
      - tdl-network

  mongo:
    image: mongo:7-jammy
    container_name: tdl-mongo-${FLASK_ENV}
    volumes:
      - mongo_data_${FLASK_ENV}:/data/db
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PWD}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      retries: 5
    networks:
      - tdl-network

volumes:
  postgres_data_development:
  postgres_data_production:
  mongo_data_development:
  mongo_data_production:
  pgadmin_data_development:

networks:
  tdl-network:
    driver: bridge